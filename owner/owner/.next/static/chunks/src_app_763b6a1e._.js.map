{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/components/Analytics.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { Card, Calendar, Table, Select, Row, Col, Spin } from \"antd\"\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from \"recharts\"\nimport dayjs from \"dayjs\"\nimport axios from \"axios\"\n\ninterface MealStatus {\n  studentName: string\n  studentEmail: string\n  meals: {\n    breakfast: {\n      opted: boolean\n      qrCode: string | null\n      used: boolean\n      usedAt: string | null\n    }\n    lunch: {\n      opted: boolean\n      qrCode: string | null\n      used: boolean\n      usedAt: string | null\n    }\n    dinner: {\n      opted: boolean\n      qrCode: string | null\n      used: boolean\n      usedAt: string | null\n    }\n  }\n}\n\ninterface MealStats {\n  date: string\n  breakfast: {\n    opted: number\n    notOpted: number\n  }\n  lunch: {\n    opted: number\n    notOpted: number\n  }\n  dinner: {\n    opted: number\n    notOpted: number\n  }\n}\n\nconst COLORS = ['#0088FE', '#FF8042']\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api'\n\nexport function Analytics() {\n  const [selectedDate, setSelectedDate] = useState(dayjs())\n  const [selectedMonth, setSelectedMonth] = useState(dayjs().month())\n  const [selectedYear, setSelectedYear] = useState(dayjs().year())\n  const [mealStatus, setMealStatus] = useState<MealStatus[]>([])\n  const [loading, setLoading] = useState(false)\n  const [hostelId, setHostelId] = useState<string>(\"\")\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    // Get hostel ID from localStorage\n    const storedHostelId = localStorage.getItem(\"hostelId\")\n    if (storedHostelId) {\n      setHostelId(storedHostelId)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (hostelId) {\n      fetchMealStatus()\n    }\n  }, [hostelId, selectedDate])\n\n  const fetchMealStatus = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      const token = localStorage.getItem('token')\n      const response = await axios.get(\n        `${API_BASE_URL}/student-meal-status/date/${selectedDate.format('YYYY-MM-DD')}?hostelId=${hostelId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      )\n      console.log('Meal status response:', response.data)\n      setMealStatus(response.data)\n    } catch (error) {\n      console.error('Error fetching meal status:', error)\n      setError('Failed to fetch meal status. Please try again.')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getMealStats = (): MealStats => {\n    const totalStudents = mealStatus.length\n    const stats: MealStats = {\n      date: selectedDate.format('YYYY-MM-DD'),\n      breakfast: { opted: 0, notOpted: 0 },\n      lunch: { opted: 0, notOpted: 0 },\n      dinner: { opted: 0, notOpted: 0 }\n    }\n\n    mealStatus.forEach(status => {\n      if (status.meals.breakfast.opted) stats.breakfast.opted++\n      else stats.breakfast.notOpted++\n      \n      if (status.meals.lunch.opted) stats.lunch.opted++\n      else stats.lunch.notOpted++\n      \n      if (status.meals.dinner.opted) stats.dinner.opted++\n      else stats.dinner.notOpted++\n    })\n\n    return stats\n  }\n\n  const getPieData = (opted: number, notOpted: number) => [\n    { name: 'Opted', value: opted },\n    { name: 'Not Opted', value: notOpted }\n  ]\n\n  const studentColumns = [\n    {\n      title: 'Name',\n      dataIndex: 'studentName',\n      key: 'studentName',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'studentEmail',\n      key: 'studentEmail',\n    },\n    {\n      title: 'Breakfast',\n      dataIndex: ['meals', 'breakfast', 'opted'],\n      key: 'breakfast',\n      render: (opted: boolean, record: MealStatus) => (\n        <div>\n          <span style={{ color: opted ? 'green' : 'red' }}>\n            {opted ? 'Opted' : 'Not Opted'}\n          </span>\n          {opted && record.meals.breakfast.qrCode && (\n            <div className=\"mt-1\">\n              <img \n                src={`https://api.qrserver.com/v1/create-qr-code/?size=100x100&data=${record.meals.breakfast.qrCode}`} \n                alt=\"Breakfast QR Code\"\n                className=\"w-8 h-8\"\n              />\n            </div>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: 'Lunch',\n      dataIndex: ['meals', 'lunch', 'opted'],\n      key: 'lunch',\n      render: (opted: boolean, record: MealStatus) => (\n        <div>\n          <span style={{ color: opted ? 'green' : 'red' }}>\n            {opted ? 'Opted' : 'Not Opted'}\n          </span>\n          {opted && record.meals.lunch.qrCode && (\n            <div className=\"mt-1\">\n              <img \n                src={`https://api.qrserver.com/v1/create-qr-code/?size=100x100&data=${record.meals.lunch.qrCode}`} \n                alt=\"Lunch QR Code\"\n                className=\"w-8 h-8\"\n              />\n            </div>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: 'Dinner',\n      dataIndex: ['meals', 'dinner', 'opted'],\n      key: 'dinner',\n      render: (opted: boolean, record: MealStatus) => (\n        <div>\n          <span style={{ color: opted ? 'green' : 'red' }}>\n            {opted ? 'Opted' : 'Not Opted'}\n          </span>\n          {opted && record.meals.dinner.qrCode && (\n            <div className=\"mt-1\">\n              <img \n                src={`https://api.qrserver.com/v1/create-qr-code/?size=100x100&data=${record.meals.dinner.qrCode}`} \n                alt=\"Dinner QR Code\"\n                className=\"w-8 h-8\"\n              />\n            </div>\n          )}\n        </div>\n      ),\n    },\n  ]\n\n  const handleDateSelect = (date: dayjs.Dayjs) => {\n    setSelectedDate(date)\n  }\n\n  const handleMonthChange = (month: number) => {\n    setSelectedMonth(month)\n  }\n\n  const handleYearChange = (year: number) => {\n    setSelectedYear(year)\n  }\n\n  const currentStats = getMealStats()\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <Spin size=\"large\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-2xl font-bold\">Meal Analytics</h2>\n        <div className=\"flex gap-4\">\n          <Select\n            value={selectedMonth}\n            onChange={handleMonthChange}\n            options={Array.from({ length: 12 }, (_, i) => ({\n              value: i,\n              label: dayjs().month(i).format('MMMM')\n            }))}\n          />\n          <Select\n            value={selectedYear}\n            onChange={handleYearChange}\n            options={Array.from({ length: 5 }, (_, i) => ({\n              value: dayjs().year() - 2 + i,\n              label: (dayjs().year() - 2 + i).toString()\n            }))}\n          />\n        </div>\n      </div>\n\n      <Row gutter={[16, 16]}>\n        <Col span={8}>\n          <Card title=\"Breakfast Statistics\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={getPieData(currentStats.breakfast.opted, currentStats.breakfast.notOpted)}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {getPieData(currentStats.breakfast.opted, currentStats.breakfast.notOpted).map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card title=\"Lunch Statistics\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={getPieData(currentStats.lunch.opted, currentStats.lunch.notOpted)}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {getPieData(currentStats.lunch.opted, currentStats.lunch.notOpted).map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card title=\"Dinner Statistics\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={getPieData(currentStats.dinner.opted, currentStats.dinner.notOpted)}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {getPieData(currentStats.dinner.opted, currentStats.dinner.notOpted).map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n      </Row>\n\n      <Card title=\"Calendar\">\n        <Calendar\n          value={selectedDate}\n          onChange={handleDateSelect}\n          mode=\"month\"\n          onPanelChange={(date) => {\n            setSelectedMonth(date.month())\n            setSelectedYear(date.year())\n          }}\n        />\n      </Card>\n\n      <Card title={`Student Meal Status for ${selectedDate.format('MMMM D, YYYY')}`}>\n        <Table\n          dataSource={mealStatus}\n          columns={studentColumns}\n          rowKey=\"studentEmail\"\n          pagination={false}\n        />\n      </Card>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/analytics/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Analytics } from \"../components/Analytics\"\n\nexport default function AnalyticsPage() {\n  return (\n    <main>\n      <div className=\"pt-24 px-4\">\n        <Analytics />\n      </div>\n    </main>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6LAAC;kBACC,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,yIAAA,CAAA,YAAS;;;;;;;;;;;;;;;AAIlB;KARwB","debugId":null}}]
}