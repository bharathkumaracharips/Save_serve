{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/components/StudentManagement.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { Table, Button, Modal, Form, Input, message } from \"antd\"\nimport { PlusOutlined, KeyOutlined } from \"@ant-design/icons\"\n\ninterface Student {\n  _id: string\n  name: string\n  email: string\n  createdAt: string\n}\n\nexport function StudentManagement() {\n  const [students, setStudents] = useState<Student[]>([])\n  const [isRegisterModalVisible, setIsRegisterModalVisible] = useState(false)\n  const [isResetModalVisible, setIsResetModalVisible] = useState(false)\n  const [selectedStudent, setSelectedStudent] = useState<Student | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [form] = Form.useForm()\n\n  const fetchStudents = async () => {\n    try {\n      const token = localStorage.getItem('token')\n      if (!token) {\n        message.error('Please login first')\n        return\n      }\n      \n      const response = await fetch('http://localhost:5001/api/students', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      })\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch students')\n      }\n      \n      const data = await response.json()\n      setStudents(data)\n    } catch (error) {\n      message.error('Failed to fetch students')\n      console.error('Error:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchStudents()\n  }, [])\n\n  const handleRegister = async (values: { name: string; email: string; password: string }) => {\n    try {\n      const token = localStorage.getItem('token')\n      if (!token) {\n        message.error('Please login first')\n        return\n      }\n\n      const response = await fetch('http://localhost:5001/api/students/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(values)\n      })\n\n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.error || 'Failed to register student')\n      }\n\n      await fetchStudents()\n      message.success('Student registered successfully')\n      setIsRegisterModalVisible(false)\n      form.resetFields()\n    } catch (error) {\n      if (error instanceof Error) {\n        message.error(error.message)\n      } else {\n        message.error('Failed to register student')\n      }\n    }\n  }\n\n  const handleResetPassword = async (values: { newPassword: string }) => {\n    try {\n      const token = localStorage.getItem('token')\n      if (!token) {\n        message.error('Please login first')\n        return\n      }\n\n      const response = await fetch(`http://localhost:5001/api/students/${selectedStudent?._id}/reset-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ newPassword: values.newPassword })\n      })\n\n      if (!response.ok) {\n        throw new Error('Failed to reset password')\n      }\n\n      message.success(`Password reset for ${selectedStudent?.email}`)\n      setIsResetModalVisible(false)\n    } catch (error) {\n      message.error('Failed to reset password')\n      console.error('Error:', error)\n    }\n  }\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    {\n      title: \"Registration Date\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      render: (date: string) => new Date(date).toLocaleDateString()\n    },\n    {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (_: any, record: Student) => (\n        <Button\n          type=\"primary\"\n          icon={<KeyOutlined />}\n          onClick={() => {\n            setSelectedStudent(record)\n            setIsResetModalVisible(true)\n          }}\n        >\n          Reset Password\n        </Button>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-2xl font-bold\">Student Management</h2>\n        <Button\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          onClick={() => setIsRegisterModalVisible(true)}\n        >\n          Register New Student\n        </Button>\n      </div>\n\n      <Table \n        dataSource={students} \n        columns={columns} \n        rowKey=\"_id\"\n        pagination={{ pageSize: 5 }}\n        loading={loading}\n      />\n\n      <Modal\n        title=\"Register New Student\"\n        open={isRegisterModalVisible}\n        onCancel={() => {\n          setIsRegisterModalVisible(false)\n          form.resetFields()\n        }}\n        footer={null}\n      >\n        <Form form={form} onFinish={handleRegister} layout=\"vertical\">\n          <Form.Item\n            name=\"name\"\n            label=\"Name\"\n            rules={[{ required: true, message: \"Please input student name\" }]}\n          >\n            <Input placeholder=\"Enter student name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[\n              { required: true, message: \"Please input email\" },\n              { type: \"email\", message: \"Please input valid email\" },\n            ]}\n          >\n            <Input placeholder=\"Enter student email\" />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[{ required: true, message: \"Please input password\" }]}\n          >\n            <Input.Password placeholder=\"Enter password\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        title={`Reset Password for ${selectedStudent?.email}`}\n        open={isResetModalVisible}\n        onCancel={() => {\n          setIsResetModalVisible(false)\n        }}\n        footer={null}\n      >\n        <Form onFinish={handleResetPassword} layout=\"vertical\">\n          <Form.Item\n            name=\"newPassword\"\n            label=\"New Password\"\n            rules={[{ required: true, message: \"Please input new password\" }]}\n          >\n            <Input.Password placeholder=\"Enter new password\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Reset Password\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/students/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { StudentManagement } from \"../components/StudentManagement\"\n\nexport default function StudentsPage() {\n  return (\n    <main>\n      <div className=\"pt-24 px-4\">\n        <StudentManagement />\n      </div>\n    </main>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6LAAC;kBACC,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,iJAAA,CAAA,oBAAiB;;;;;;;;;;;;;;;AAI1B;KARwB","debugId":null}}]
}