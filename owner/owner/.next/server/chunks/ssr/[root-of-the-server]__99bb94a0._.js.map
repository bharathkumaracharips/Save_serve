{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/components/FoodMenu.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\nimport { Modal, Form, Input, message } from \"antd\"\nimport { Edit3, Coffee, Sun, Moon } from \"lucide-react\"\n\ninterface Meal {\n  breakfast: string[]\n  lunch: string[]\n  dinner: string[]\n}\n\ninterface WeeklyMenu {\n  [key: string]: Meal\n}\n\n// Temporary menu data\nconst initialMenu: WeeklyMenu = {\n  Monday: {\n    breakfast: [\"Idli\", \"Sambar\", \"Chutney\", \"Coffee/Tea\"],\n    lunch: [\"Rice\", \"Dal\", \"Mixed Veg Curry\", \"Curd\", \"Papad\"],\n    dinner: [\"Chapati\", \"Paneer Butter Masala\", \"Jeera Rice\", \"Sweet\"]\n  },\n  Tuesday: {\n    breakfast: [\"Dosa\", \"Sambar\", \"Chutney\", \"Coffee/Tea\"],\n    lunch: [\"Rice\", \"Sambar\", \"Bhindi Fry\", \"Curd\", \"Pickle\"],\n    dinner: [\"Chapati\", \"Veg Curry\", \"Rice\", \"Ice Cream\"]\n  },\n  Wednesday: {\n    breakfast: [\"Puri\", \"Aloo Bhaji\", \"Upma\", \"Coffee/Tea\"],\n    lunch: [\"Rice\", \"Dal Tadka\", \"Cabbage Curry\", \"Curd\", \"Papad\"],\n    dinner: [\"Chapati\", \"Mushroom Curry\", \"Rice\", \"Fruit Custard\"]\n  },\n  Thursday: {\n    breakfast: [\"Uttapam\", \"Sambar\", \"Chutney\", \"Coffee/Tea\"],\n    lunch: [\"Rice\", \"Rajma\", \"Aloo Gobi\", \"Curd\", \"Pickle\"],\n    dinner: [\"Chapati\", \"Dal Makhani\", \"Rice\", \"Kheer\"]\n  },\n  Friday: {\n    breakfast: [\"Poha\", \"Boiled Eggs/Sprouts\", \"Coffee/Tea\"],\n    lunch: [\"Rice\", \"Dal\", \"Palak Paneer\", \"Curd\", \"Papad\"],\n    dinner: [\"Chapati\", \"Mix Veg Curry\", \"Rice\", \"Halwa\"]\n  },\n  Saturday: {\n    breakfast: [\"Vada\", \"Sambar\", \"Chutney\", \"Coffee/Tea\"],\n    lunch: [\"Rice\", \"Sambar\", \"Potato Curry\", \"Curd\", \"Pickle\"],\n    dinner: [\"Chapati\", \"Chana Masala\", \"Rice\", \"Gulab Jamun\"]\n  },\n  Sunday: {\n    breakfast: [\"Paratha\", \"Chole\", \"Curd\", \"Coffee/Tea\"],\n    lunch: [\"Rice\", \"Dal Fry\", \"Veg Korma\", \"Curd\", \"Papad\"],\n    dinner: [\"Chapati\", \"Matar Paneer\", \"Rice\", \"Rasmalai\"]\n  }\n}\n\nexport function FoodMenu() {\n  const [menu, setMenu] = useState<WeeklyMenu>(initialMenu)\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false)\n  const [selectedDay, setSelectedDay] = useState<string>(\"\")\n  const [selectedMeal, setSelectedMeal] = useState<keyof Meal>(\"breakfast\")\n  const [form] = Form.useForm()\n\n  const handleEdit = (day: string, meal: keyof Meal) => {\n    setSelectedDay(day)\n    setSelectedMeal(meal)\n    form.setFieldsValue({\n      items: menu[day][meal].join(\", \")\n    })\n    setIsEditModalVisible(true)\n  }\n\n  const handleSave = (values: { items: string }) => {\n    try {\n      const items = values.items.split(\",\").map(item => item.trim())\n      setMenu(prev => ({\n        ...prev,\n        [selectedDay]: {\n          ...prev[selectedDay],\n          [selectedMeal]: items\n        }\n      }))\n      message.success(\"Menu updated successfully\")\n      setIsEditModalVisible(false)\n    } catch (error) {\n      message.error(\"Failed to update menu\")\n    }\n  }\n\n  const getMealIcon = (meal: keyof Meal) => {\n    switch (meal) {\n      case \"breakfast\":\n        return <Coffee className=\"w-5 h-5\" />\n      case \"lunch\":\n        return <Sun className=\"w-5 h-5\" />\n      case \"dinner\":\n        return <Moon className=\"w-5 h-5\" />\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold text-white\">Weekly Food Menu</h2>\n      </div>\n\n      <div className=\"grid gap-6\">\n        {Object.entries(menu).map(([day, meals]) => (\n          <div key={day} className=\"bg-[#1a1b1e] border border-gray-800 rounded-2xl p-6 shadow-xl\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\">{day}</h3>\n            \n            <div className=\"grid gap-4\">\n              {(Object.keys(meals) as Array<keyof Meal>).map((mealType) => (\n                <div\n                  key={mealType}\n                  className=\"p-4 bg-white/5 rounded-xl hover:bg-white/[0.07] transition-colors group\"\n                >\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center gap-2 text-gray-400\">\n                      {getMealIcon(mealType)}\n                      <span className=\"font-medium capitalize\">{mealType}</span>\n                    </div>\n                    <button\n                      onClick={() => handleEdit(day, mealType)}\n                      className=\"p-2 text-gray-400 hover:text-white hover:bg-white/5 rounded-lg opacity-0 group-hover:opacity-100 transition-all\"\n                    >\n                      <Edit3 className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                  \n                  <div className=\"pl-7\">\n                    {meals[mealType].map((item, index) => (\n                      <span\n                        key={index}\n                        className=\"inline-block bg-white/[0.06] text-gray-300 rounded-full px-3 py-1 text-sm mr-2 mb-2\"\n                      >\n                        {item}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <Modal\n        title={\n          <div className=\"flex items-center gap-2 text-lg\">\n            <span>Edit {selectedMeal} for {selectedDay}</span>\n          </div>\n        }\n        open={isEditModalVisible}\n        onCancel={() => {\n          setIsEditModalVisible(false)\n          form.resetFields()\n        }}\n        footer={null}\n        className=\"modern-modal\"\n      >\n        <Form form={form} onFinish={handleSave} layout=\"vertical\">\n          <Form.Item\n            name=\"items\"\n            label=\"Menu Items (comma-separated)\"\n            rules={[{ required: true, message: \"Please input menu items\" }]}\n          >\n            <Input.TextArea\n              rows={4}\n              placeholder=\"Enter menu items separated by commas\"\n              className=\"modern-input\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <button\n              type=\"submit\"\n              className=\"w-full bg-primary hover:bg-primary/90 text-white font-medium py-2 px-4 rounded-lg transition-colors\"\n            >\n              Save Changes\n            </button>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <style jsx global>{`\n        .modern-modal .ant-modal-content {\n          background: #1a1b1e;\n          border: 1px solid #2d2d2d;\n          border-radius: 1rem;\n          box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n          padding: 1.5rem;\n        }\n        .modern-modal .ant-modal-header {\n          background: transparent;\n          border: none;\n          padding: 0;\n          margin-bottom: 1.5rem;\n        }\n        .modern-modal .ant-modal-title {\n          color: white;\n        }\n        .modern-modal .ant-modal-close {\n          color: #6b7280;\n        }\n        .modern-modal .ant-modal-close:hover {\n          color: white;\n        }\n        .modern-modal .ant-form-item-label > label {\n          color: #9ca3af;\n        }\n        .modern-input {\n          background: rgba(255, 255, 255, 0.05) !important;\n          border: 1px solid #2d2d2d !important;\n          border-radius: 0.5rem !important;\n          color: white !important;\n        }\n        .modern-input:focus {\n          border-color: #3b82f6 !important;\n          box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1) !important;\n        }\n      `}</style>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/menu/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { FoodMenu } from \"../components/FoodMenu\"\n\nexport default function MenuPage() {\n  return (\n    <main>\n      <div className=\"pt-24 px-4\">\n        <FoodMenu />\n      </div>\n    </main>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,qIAAA,CAAA,WAAQ;;;;;;;;;;;;;;;AAIjB","debugId":null}}]
}