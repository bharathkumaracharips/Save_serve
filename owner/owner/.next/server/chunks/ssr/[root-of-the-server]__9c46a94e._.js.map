{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/components/OwnerLogin.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Lock, Mail } from \"lucide-react\"\n\ninterface OwnerLoginProps {\n  onLoginSuccess?: () => void\n}\n\nexport function OwnerLogin({ onLoginSuccess }: OwnerLoginProps) {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const router = useRouter()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError(\"\")\n\n    try {\n      // Here you would typically make an API call to your backend\n      // For now, we'll use mock authentication\n      if (email === \"owner@example.com\" && password === \"password\") {\n        // Store owner data in localStorage\n        const ownerData = {\n          id: \"1\",\n          email: email,\n          name: \"Owner\",\n          role: \"owner\"\n        }\n        localStorage.setItem(\"ownerData\", JSON.stringify(ownerData))\n        onLoginSuccess?.()\n        router.push(\"/\")\n      } else {\n        setError(\"Invalid email or password\")\n      }\n    } catch (err) {\n      setError(\"An error occurred during login\")\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Owner Login\n          </h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div className=\"flex items-center border border-gray-300 rounded-t-md\">\n              <Mail className=\"h-5 w-5 text-gray-400 mx-3\" />\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border-0 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            <div className=\"flex items-center border border-gray-300 rounded-b-md\">\n              <Lock className=\"h-5 w-5 text-gray-400 mx-3\" />\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border-0 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"text-red-500 text-sm text-center\">{error}</div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAJA;;;;;AAUO,SAAS,WAAW,EAAE,cAAc,EAAmB;IAC5D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,IAAI;YACF,4DAA4D;YAC5D,yCAAyC;YACzC,IAAI,UAAU,uBAAuB,aAAa,YAAY;gBAC5D,mCAAmC;gBACnC,MAAM,YAAY;oBAChB,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,MAAM;gBACR;gBACA,aAAa,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;gBACjD;gBACA,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,SAAS;YACX;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;8BACC,cAAA,8OAAC;wBAAG,WAAU;kCAAyD;;;;;;;;;;;8BAIzE,8OAAC;oBAAK,WAAU;oBAAiB,UAAU;;sCACzC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,kMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;sDAChB,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,QAAQ;4CACR,WAAU;4CACV,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;8CAG5C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,kMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;sDAChB,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,QAAQ;4CACR,WAAU;4CACV,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;wBAKhD,uBACC,8OAAC;4BAAI,WAAU;sCAAoC;;;;;;sCAGrD,8OAAC;sCACC,cAAA,8OAAC;gCACC,MAAK;gCACL,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/components/OwnerNavBar.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useEffect, useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter, usePathname } from \"next/navigation\"\nimport { LucideIcon, Home, Settings, Users, BarChart2, MessageSquare, AlertCircle, LogOut, LogIn, Utensils, ScanLine } from \"lucide-react\"\nimport { cn } from \"../lib/utils\"\nimport { OwnerLogin } from \"./OwnerLogin\"\n\ninterface NavItem {\n  name: string\n  url: string\n  icon: LucideIcon\n}\n\ninterface NavBarProps {\n  items?: NavItem[]\n  className?: string\n}\n\nconst defaultItems: NavItem[] = [\n  { name: \"Dashboard\", url: \"/\", icon: Home },\n  { name: \"Students\", url: \"/students\", icon: Users },\n  { name: \"Food Menu\", url: \"/menu\", icon: Utensils },\n  { name: \"Analytics\", url: \"/analytics\", icon: BarChart2 },\n  { name: \"Scan QR\", url: \"/scan\", icon: ScanLine },\n  { name: \"Settings\", url: \"/settings\", icon: Settings },\n  { name: \"Contact Support\", url: \"/support\", icon: MessageSquare },\n  { name: \"Raise Complaint\", url: \"/complaint\", icon: AlertCircle },\n]\n\nexport function OwnerNavBar({ items = defaultItems, className }: NavBarProps) {\n  const [isLoggedIn, setIsLoggedIn] = useState(true) // Set to true for temporary data\n  const [showLoginModal, setShowLoginModal] = useState(false)\n  const pathname = usePathname()\n  const router = useRouter()\n\n  const handleLogout = () => {\n    setIsLoggedIn(false)\n    router.push('/')\n  }\n\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true)\n    setShowLoginModal(false)\n  }\n\n  return (\n    <>\n      <div className=\"fixed top-0 left-0 right-0 z-50 bg-black/50 backdrop-blur-xl border-b border-white/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          <div className=\"flex items-center justify-center h-16 gap-1\">\n            {items.map((item) => (\n              <Link\n                key={item.name}\n                href={item.url}\n                className={cn(\n                  \"flex items-center gap-2 px-3 py-2 text-sm font-medium text-gray-400 hover:text-white hover:bg-white/5 rounded-lg transition-all duration-200\",\n                  pathname === item.url && \"bg-white/10 text-white\"\n                )}\n              >\n                <item.icon size={18} strokeWidth={2} />\n                <span className=\"hidden sm:inline\">{item.name}</span>\n              </Link>\n            ))}\n            \n            {isLoggedIn ? (\n              <button\n                onClick={handleLogout}\n                className=\"flex items-center gap-2 px-3 py-2 text-sm font-medium text-gray-400 hover:text-white hover:bg-white/5 rounded-lg transition-all duration-200 ml-2\"\n              >\n                <LogOut size={18} strokeWidth={2} />\n                <span className=\"hidden sm:inline\">Logout</span>\n              </button>\n            ) : (\n              <button\n                onClick={() => setShowLoginModal(true)}\n                className=\"flex items-center gap-2 px-3 py-2 text-sm font-medium text-gray-400 hover:text-white hover:bg-white/5 rounded-lg transition-all duration-200 ml-2\"\n              >\n                <LogIn size={18} strokeWidth={2} />\n                <span className=\"hidden sm:inline\">Login</span>\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {showLoginModal && (\n        <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"bg-[#1a1b1e] rounded-2xl p-8 max-w-md w-full mx-4 shadow-2xl border border-gray-800\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-bold text-white\">Owner Login</h2>\n              <button\n                onClick={() => setShowLoginModal(false)}\n                className=\"text-gray-400 hover:text-white transition-colors duration-200\"\n              >\n                âœ•\n              </button>\n            </div>\n            <OwnerLogin onLoginSuccess={handleLoginSuccess} />\n          </div>\n        </div>\n      )}\n    </>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;;;;;;;;AAoBA,MAAM,eAA0B;IAC9B;QAAE,MAAM;QAAa,KAAK;QAAK,MAAM,kMAAA,CAAA,OAAI;IAAC;IAC1C;QAAE,MAAM;QAAY,KAAK;QAAa,MAAM,oMAAA,CAAA,QAAK;IAAC;IAClD;QAAE,MAAM;QAAa,KAAK;QAAS,MAAM,0MAAA,CAAA,WAAQ;IAAC;IAClD;QAAE,MAAM;QAAa,KAAK;QAAc,MAAM,oNAAA,CAAA,YAAS;IAAC;IACxD;QAAE,MAAM;QAAW,KAAK;QAAS,MAAM,8MAAA,CAAA,WAAQ;IAAC;IAChD;QAAE,MAAM;QAAY,KAAK;QAAa,MAAM,0MAAA,CAAA,WAAQ;IAAC;IACrD;QAAE,MAAM;QAAmB,KAAK;QAAY,MAAM,wNAAA,CAAA,gBAAa;IAAC;IAChE;QAAE,MAAM;QAAmB,KAAK;QAAc,MAAM,oNAAA,CAAA,cAAW;IAAC;CACjE;AAEM,SAAS,YAAY,EAAE,QAAQ,YAAY,EAAE,SAAS,EAAe;IAC1E,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,iCAAiC;;IACpF,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe;QACnB,cAAc;QACd,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,qBAAqB;QACzB,cAAc;QACd,kBAAkB;IACpB;IAEA,qBACE;;0BACE,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;4BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,4JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,GAAG;oCACd,WAAW,CAAA,GAAA,0HAAA,CAAA,KAAE,AAAD,EACV,gJACA,aAAa,KAAK,GAAG,IAAI;;sDAG3B,8OAAC,KAAK,IAAI;4CAAC,MAAM;4CAAI,aAAa;;;;;;sDAClC,8OAAC;4CAAK,WAAU;sDAAoB,KAAK,IAAI;;;;;;;mCARxC,KAAK,IAAI;;;;;4BAYjB,2BACC,8OAAC;gCACC,SAAS;gCACT,WAAU;;kDAEV,8OAAC,0MAAA,CAAA,SAAM;wCAAC,MAAM;wCAAI,aAAa;;;;;;kDAC/B,8OAAC;wCAAK,WAAU;kDAAmB;;;;;;;;;;;qDAGrC,8OAAC;gCACC,SAAS,IAAM,kBAAkB;gCACjC,WAAU;;kDAEV,8OAAC,wMAAA,CAAA,QAAK;wCAAC,MAAM;wCAAI,aAAa;;;;;;kDAC9B,8OAAC;wCAAK,WAAU;kDAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAO5C,gCACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAgC;;;;;;8CAC9C,8OAAC;oCACC,SAAS,IAAM,kBAAkB;oCACjC,WAAU;8CACX;;;;;;;;;;;;sCAIH,8OAAC,uIAAA,CAAA,aAAU;4BAAC,gBAAgB;;;;;;;;;;;;;;;;;;;AAMxC","debugId":null}}]
}