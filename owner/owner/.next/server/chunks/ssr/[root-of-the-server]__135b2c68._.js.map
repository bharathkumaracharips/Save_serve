{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/components/Analytics.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { Card, Calendar, Table, Select, Row, Col, Spin } from \"antd\"\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from \"recharts\"\nimport dayjs from \"dayjs\"\nimport axios from \"axios\"\n\ninterface MealStatus {\n  studentName: string\n  studentEmail: string\n  meals: {\n    breakfast: {\n      selected: boolean\n      qrCode: string | null\n      used: boolean\n      usedAt: string | null\n      submittedAt: string | null\n    }\n    lunch: {\n      selected: boolean\n      qrCode: string | null\n      used: boolean\n      usedAt: string | null\n      submittedAt: string | null\n    }\n    dinner: {\n      selected: boolean\n      qrCode: string | null\n      used: boolean\n      usedAt: string | null\n      submittedAt: string | null\n    }\n  }\n  dayOfWeek?: string\n  createdAt?: string\n  updatedAt?: string\n  expiresAt?: string\n}\n\ninterface MealStats {\n  date: string\n  breakfast: {\n    selected: number\n    notSelected: number\n  }\n  lunch: {\n    selected: number\n    notSelected: number\n  }\n  dinner: {\n    selected: number\n    notSelected: number\n  }\n}\n\nconst COLORS = ['#0088FE', '#FF8042'] // Original colors\n// const COLORS = ['#22C55E', '#EF4444'] // Changed to Green and Red for testing\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api'\n\nexport function Analytics() {\n  const [selectedDate, setSelectedDate] = useState(dayjs())\n  const [selectedMonth, setSelectedMonth] = useState(dayjs().month())\n  const [selectedYear, setSelectedYear] = useState(dayjs().year())\n  const [mealStatus, setMealStatus] = useState<MealStatus[]>([])\n  const [loading, setLoading] = useState(false)\n  const [hostelId, setHostelId] = useState<string>(\"\")\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    // Get hostel ID from localStorage\n    const storedHostelId = localStorage.getItem(\"hostelId\")\n    if (storedHostelId) {\n      console.log('[Analytics] Found hostelId in localStorage:', storedHostelId);\n      setHostelId(storedHostelId)\n    } else {\n      console.warn('[Analytics] Hostel ID not found in localStorage.');\n      setError(\"Hostel ID not configured. Please ensure you are logged in correctly.\");\n    }\n  }, [])\n\n  useEffect(() => {\n    if (hostelId) {\n      console.log('[Analytics] Fetch triggered for hostelId:', hostelId, 'Date:', selectedDate.format('YYYY-MM-DD'));\n      fetchMealStatus()\n    } else {\n      console.log('[Analytics] Fetch skipped, hostelId not available.');\n    }\n  }, [hostelId, selectedDate])\n\n  const fetchMealStatus = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      const token = localStorage.getItem('token')\n      const requestUrl = `${API_BASE_URL}/student-meal-status/date/${selectedDate.format('YYYY-MM-DD')}?hostelId=${hostelId}`\n      console.log('[Analytics] Fetching meal status from:', requestUrl)\n      const response = await axios.get(\n        requestUrl,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      )\n      console.log('[Analytics] Meal status API response:', response.data)\n      if (Array.isArray(response.data)) {\n        setMealStatus(response.data)\n        console.log('[Analytics] Meal status state updated with', response.data.length, 'records.')\n        console.log('[Analytics] State right after setMealStatus:', response.data);\n      } else {\n        console.error('[Analytics] API response is not an array:', response.data)\n        setError('Received invalid data format from server.')\n        setMealStatus([])\n      }\n    } catch (error) {\n      console.error('[Analytics] Error fetching meal status:', error)\n      setError('Failed to fetch meal status. Please check the console for details.')\n      setMealStatus([])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getMealStats = (): MealStats => {\n    const totalStudents = mealStatus.length\n    const stats: MealStats = {\n      date: selectedDate.format('YYYY-MM-DD'),\n      breakfast: { selected: 0, notSelected: 0 },\n      lunch: { selected: 0, notSelected: 0 },\n      dinner: { selected: 0, notSelected: 0 }\n    }\n\n    mealStatus.forEach(status => {\n      if (status.meals.breakfast.selected) stats.breakfast.selected++\n      else stats.breakfast.notSelected++\n      \n      if (status.meals.lunch.selected) stats.lunch.selected++\n      else stats.lunch.notSelected++\n      \n      if (status.meals.dinner.selected) stats.dinner.selected++\n      else stats.dinner.notSelected++\n    })\n\n    return stats\n  }\n\n  const getPieData = (selected: number, notSelected: number) => [\n    { name: 'Selected', value: selected },\n    { name: 'Not Selected', value: notSelected }\n  ]\n\n  const studentColumns = [\n    {\n      title: 'Name',\n      dataIndex: 'studentName',\n      key: 'studentName',\n      width: '20%',\n      render: (name: string) => (\n        <span className=\"font-medium\">{name}</span>\n      )\n    },\n    {\n      title: 'Email',\n      dataIndex: 'studentEmail',\n      key: 'studentEmail',\n      width: '20%',\n    },\n    {\n      title: 'Breakfast',\n      dataIndex: ['meals', 'breakfast'],\n      key: 'breakfast',\n      width: '20%',\n      render: (breakfast: any, record: MealStatus) => (\n        <div className=\"flex flex-col items-center gap-2\">\n          <span style={{ color: breakfast.selected ? 'green' : 'red' }} className=\"font-medium\">\n            {breakfast.selected ? 'Selected' : 'Not Selected'}\n          </span>\n          {breakfast.selected && breakfast.qrCode && (\n            <div className=\"mt-2\">\n              <img \n                src={`https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${breakfast.qrCode}`} \n                alt=\"Breakfast QR Code\"\n                className=\"w-24 h-24 border border-gray-200 rounded-lg shadow-sm\"\n              />\n            </div>\n          )}\n          {breakfast.used && (\n            <span className=\"text-sm text-gray-500\">\n              Used at: {new Date(breakfast.usedAt!).toLocaleString()}\n        </span>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: 'Lunch',\n      dataIndex: ['meals', 'lunch'],\n      key: 'lunch',\n      width: '20%',\n      render: (lunch: any, record: MealStatus) => (\n        <div className=\"flex flex-col items-center gap-2\">\n          <span style={{ color: lunch.selected ? 'green' : 'red' }} className=\"font-medium\">\n            {lunch.selected ? 'Selected' : 'Not Selected'}\n          </span>\n          {lunch.selected && lunch.qrCode && (\n            <div className=\"mt-2\">\n              <img \n                src={`https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${lunch.qrCode}`} \n                alt=\"Lunch QR Code\"\n                className=\"w-24 h-24 border border-gray-200 rounded-lg shadow-sm\"\n              />\n            </div>\n          )}\n          {lunch.used && (\n            <span className=\"text-sm text-gray-500\">\n              Used at: {new Date(lunch.usedAt!).toLocaleString()}\n        </span>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: 'Dinner',\n      dataIndex: ['meals', 'dinner'],\n      key: 'dinner',\n      width: '20%',\n      render: (dinner: any, record: MealStatus) => (\n        <div className=\"flex flex-col items-center gap-2\">\n          <span style={{ color: dinner.selected ? 'green' : 'red' }} className=\"font-medium\">\n            {dinner.selected ? 'Selected' : 'Not Selected'}\n          </span>\n          {dinner.selected && dinner.qrCode && (\n            <div className=\"mt-2\">\n              <img \n                src={`https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${dinner.qrCode}`} \n                alt=\"Dinner QR Code\"\n                className=\"w-24 h-24 border border-gray-200 rounded-lg shadow-sm\"\n              />\n            </div>\n          )}\n          {dinner.used && (\n            <span className=\"text-sm text-gray-500\">\n              Used at: {new Date(dinner.usedAt!).toLocaleString()}\n        </span>\n          )}\n        </div>\n      ),\n    },\n  ]\n\n  const handleDateSelect = (date: dayjs.Dayjs) => {\n    setSelectedDate(date)\n  }\n\n  const handleMonthChange = (month: number) => {\n    setSelectedMonth(month)\n  }\n\n  const handleYearChange = (year: number) => {\n    setSelectedYear(year)\n  }\n\n  const currentStats = getMealStats()\n\n  console.log('[Analytics] State before render - mealStatus:', mealStatus, 'loading:', loading, 'error:', error);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <Spin size=\"large\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-2xl font-bold\">Meal Analytics</h2>\n        <div className=\"flex gap-4\">\n          <Select\n            value={selectedMonth}\n            onChange={handleMonthChange}\n            options={Array.from({ length: 12 }, (_, i) => ({\n              value: i,\n              label: dayjs().month(i).format('MMMM')\n            }))}\n          />\n          <Select\n            value={selectedYear}\n            onChange={handleYearChange}\n            options={Array.from({ length: 5 }, (_, i) => ({\n              value: dayjs().year() - 2 + i,\n              label: (dayjs().year() - 2 + i).toString()\n            }))}\n          />\n        </div>\n      </div>\n\n      <Row gutter={[16, 16]}>\n        <Col span={8}>\n          <Card title=\"Breakfast Statistics\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={getPieData(currentStats.breakfast.selected, currentStats.breakfast.notSelected)}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {getPieData(currentStats.breakfast.selected, currentStats.breakfast.notSelected).map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n            <div className=\"mt-4 text-center\">\n              <p>Selected: {currentStats.breakfast.selected}</p>\n              <p>Not Selected: {currentStats.breakfast.notSelected}</p>\n              <p>Total: {currentStats.breakfast.selected + currentStats.breakfast.notSelected}</p>\n            </div>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card title=\"Lunch Statistics\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={getPieData(currentStats.lunch.selected, currentStats.lunch.notSelected)}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {getPieData(currentStats.lunch.selected, currentStats.lunch.notSelected).map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n            <div className=\"mt-4 text-center\">\n              <p>Selected: {currentStats.lunch.selected}</p>\n              <p>Not Selected: {currentStats.lunch.notSelected}</p>\n              <p>Total: {currentStats.lunch.selected + currentStats.lunch.notSelected}</p>\n            </div>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card title=\"Dinner Statistics\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={getPieData(currentStats.dinner.selected, currentStats.dinner.notSelected)}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {getPieData(currentStats.dinner.selected, currentStats.dinner.notSelected).map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n            <div className=\"mt-4 text-center\">\n              <p>Selected: {currentStats.dinner.selected}</p>\n              <p>Not Selected: {currentStats.dinner.notSelected}</p>\n              <p>Total: {currentStats.dinner.selected + currentStats.dinner.notSelected}</p>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n\n      <Card title=\"Calendar\">\n        <Calendar\n          value={selectedDate}\n          onChange={handleDateSelect}\n          mode=\"month\"\n          onPanelChange={(date) => {\n            setSelectedMonth(date.month())\n            setSelectedYear(date.year())\n          }}\n        />\n      </Card>\n\n      <Card title={`Student Meal Status for ${selectedDate.format('MMMM D, YYYY')}`}>\n        <Table\n          dataSource={mealStatus}\n          columns={studentColumns}\n          rowKey=\"studentEmail\"\n          pagination={false}\n          scroll={{ x: 1200 }}\n          className=\"overflow-x-auto\"\n        />\n      </Card>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file:///Users/psbharathkumarachari/save_serve_complete/owner/owner/src/app/analytics/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Analytics } from \"../components/Analytics\"\n\nexport default function AnalyticsPage() {\n  return (\n    <main>\n      <div className=\"pt-24 px-4\">\n        <Analytics />\n      </div>\n    </main>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,sIAAA,CAAA,YAAS;;;;;;;;;;;;;;;AAIlB","debugId":null}}]
}